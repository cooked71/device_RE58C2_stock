on early-init
    # Make sure metadata is available early (needed for decryption & AVB)
    mount f2fs /dev/block/by-name/metadata /metadata noatime,nosuid,nodev,discard,check,formattable,first_stage_mount,wait

on init
    # Mount dynamic partitions (read-only in recovery)
    mount erofs system /system ro,logical,first_stage_mount,slotselect,avb=vbmeta_system,avb_keys=/avb/q-gsi.avbpubkey:/avb/r-gsi.avbpubkey:/avb/s-gsi.avbpubkey,wait
    mount erofs product /product ro,logical,first_stage_mount,slotselect,avb=vbmeta_product,wait
    mount erofs system_ext /system_ext ro,logical,first_stage_mount,slotselect,avb=vbmeta_system,wait
    mount erofs vendor /vendor ro,logical,first_stage_mount,slotselect,avb=vbmeta_vendor,wait
    mount erofs odm /odm ro,logical,first_stage_mount,slotselect,avb=vbmeta_odm,wait
    mount erofs vendor_dlkm /vendor_dlkm ro,logical,first_stage_mount,slotselect,avb=vbmeta_vendor_dlkm,wait

    # Mount data (with encryption parameters)
    mount f2fs /dev/block/by-name/userdata /data noatime,nosuid,nodev,discard,reserve_root=32768,resgid=1065,inline_xattr,inline_data,inlinecrypt,fsync_mode=nobarrier,latemount,wait,check,formattable,fileencryption=aes-256-xts:aes-256-cts:v2+inlinecrypt_optimized,keydirectory=/metadata/vold/metadata_encryption,reservedsize=128M,checkpoint=fs

    # Mount cache
    mount f2fs /dev/block/by-name/cache /cache noatime,nosuid,nodev,discard,wait,check,formattable

on fs
    # Prepare removable storage handling
    mkdir /mnt/media_rw 0700 root root
    mkdir /mnt/media_rw/sdcard0 0700 root root
    mkdir /mnt/media_rw/usbdisk 0700 root root

on post-fs
    # Start vold for USB OTG and SD card handling
    start vold
